---
title: "R Notebook"
output: html_notebook
---

Install required packages


```{r}
remotes::install_github("teunbrand/ggh4x")
```

Load packages

```{r}
library(readxl)
library(tidyverse)
library(xtable)
library(lubridate)
library(ggrepel)
library(ggh4x)
library(haven)

theme_set(theme_bw())
```


Selectivv data

```{r}
selectivv <- list()
selectivv[[1]] <- read_csv(file = "data/gig-table1-monthly-counts-stats.csv")
selectivv[[2]] <- read_csv(file = "data/gig-table2-halfyear-demo-stats.csv")
selectivv[[3]] <- read_csv(file = "data/gig-table3-halfyear-region-stats.csv")
selectivv[[4]] <- read_csv(file = "data/gig-table4-halfyear-activity-stats.csv")
```

LFS (BAEL) data 

```{r}
bael <- read_csv("data/bael.csv") %>%
  na.omit() %>%
  unite(period, year:yearhalf, sep = ".") %>%
  rename(region_name = nazwa_miasta)
```



Figure 3: Number of monthly active users of selected apps in Poland by type and between 2018 and2020


```{r}
selectivv[[1]] %>%
  mutate(label = if_else(month == max(month), as.character(apps), NA_character_),
         apps = factor(apps, c("Uber", "Bolt Driver", "iTaxi", "FREE NOW",
                               "Takeaway", "Wolt", "Glover",  "Bolt Courier")),
         category  = factor(category, c("Transportation", "Delivery"))) %>%
  ggplot(data = ., aes(x = month, y = number_of_users/1000, color = apps, group = apps)) +
  geom_line(show.legend = FALSE) + 
  geom_text_repel(aes(label = label),
                  nudge_x = -0.25, 
                  direction = "y", 
                  hjust = "left",
                  box.padding = .1,
                  force = .8,
                  na.rm = TRUE,
                  show.legend = FALSE) + 
  scale_color_brewer(type = "qual", palette = "Dark2") + 
  labs(x = "The reference period", y = 'Number of users (thousands)', color = "App") + 
  facet_wrap(~category, scales = "free_y") +
  scale_x_date(limits = c(as.Date("2018-01-01"), as.Date("2021-09-01"))) + 
  theme(strip.text = element_text(size = 15)) ->  p1

p1

ggsave(plot = p1, file = "figures/fig-sel-month.png", width = 7, height = 4)
```

Figure 4 -- by region

```{r}
selectivv[[3]] %>%
  count(category, apps, group, period, wt = number_of_users) %>%
  spread(group, n) %>%
  mutate(fua = `Functional area` - Cities, 
         woj = Voivodeship - `Functional area`) %>%
  select(category, apps, period, cities = Cities, fua, woj) %>%
  gather(geo, val, -apps, -period, -category) %>%
  mutate(geo = factor(geo, c("cities", "fua", "woj"),
                      c("Cities", "Functional UAs", "Provinces")),
         category  = factor(category, c("Transportation", "Delivery"))) %>%
  group_by(apps, geo) %>%
  mutate(index = val/val[1],
         diff = val-val[1],
         apps = factor(apps, c("Uber", "Bolt Driver", "iTaxi", "FREE NOW",
                               "Takeaway", "Wolt", "Glover",  "Bolt Courier"))) %>%
  ggplot(data = ., aes(x = as.factor(period), y = diff/1000, group = apps, color = apps)) +
  geom_line() +
  geom_point() + 
  scale_color_brewer(type = "qual", palette = "Dark2") +  
  facet_grid(category ~ geo, scales = "free_y") +
  geom_hline(yintercept = 0, linetype = "dashed") +
  labs(x = "The reference period (t0=2018.1)", 
       y = "Change in the number of users\n(in thousands)", color = "Apps") +
  theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1),
        legend.position = "bottom",
        legend.direction = "horizontal") +
  guides(color = guide_legend(nrow = 2, byrow = TRUE)) ->  p1b

p1b

ggsave(plot = p1b, file = "figures/fig-sel-diff-hy.png", width = 8, height = 5)
```


Figure 5 Number of monthly active users of selected apps in Poland by country, age and gender between 2018 and 2020

```{r}
selectivv[[2]] %>%
  mutate(apps = factor(apps, c("Uber", "Bolt Driver", "iTaxi", "FREE NOW",
                               "Takeaway", "Wolt", "Glover",  "Bolt Courier")),
         category  = factor(category, c("Transportation", "Delivery"))) %>%
  count(category, apps, country, period, wt = n_unique_users) %>%  
  ggplot(data = ., aes(x = as.character(period), y = n/1000, group = country, color = country)) +
  geom_line() +
  geom_point() + 
  scale_color_brewer(type = "qual", palette = "Dark2") +  
  facet_nested(~ category + apps) +
  labs(x = "Half-year", y = "Number of users (in thousands)", color = "Nationality") +
  theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1),
        legend.position = "bottom") -> p2a

p2a

ggsave(plot = p2a, file = "figures/fig-sel-half-country.png", width = 8, height = 4)
```

```{r}
selectivv[[2]]  %>%
  mutate(apps = factor(apps, c("Uber", "Bolt Driver", "iTaxi", "FREE NOW",
                               "Takeaway", "Wolt", "Glover",  "Bolt Courier")),
         category  = factor(category, c("Transportation", "Delivery"))) %>%
  count(category, apps, age, period, wt = n_unique_users) %>%
  ggplot(data = ., aes(x = as.character(period), y = n/1000, group = age, color = age)) +
  geom_line() +
  geom_point() + 
  scale_color_brewer(type = "qual", palette = "Dark2") +  
  facet_nested(~ category + apps) +
  labs(x = "Half-year", y = "Number of users (in thousands)", color = "Age group") +
  theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1),
        legend.position = "bottom") -> p2b

p2b

ggsave(plot = p2b, file = "figures/fig-sel-half-age.png", width = 8, height = 4)


```


```{r}
selectivv[[2]]  %>%
  mutate(apps = factor(apps, c("Uber", "Bolt Driver", "iTaxi", "FREE NOW",
                               "Takeaway", "Wolt", "Glover",  "Bolt Courier")),
         category  = factor(category, c("Transportation", "Delivery"))) %>%
  count(category, apps, gender, period, wt = n_unique_users)  %>%
  ggplot(data = ., aes(x = as.character(period), y = n/1000, group = gender, color = gender)) +
  geom_line() +
  geom_point() + 
  scale_color_brewer(type = "qual", palette = "Dark2") +  
  facet_nested(~ category + apps) +
  labs(x = "Half-year", y = "Number of users (in thousands)", color = "Sex") +
  theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1),
        legend.position = "bottom") -> p2c

p2c

ggsave(plot = p2c, file = "figures/fig-sel-half-sex.png", width = 8, height = 4)

```

Figure 6 -- Point and 95\% interval of ratio of the number of active users and the LFS working 18--65 population by app for 2020HY1. Note that Y axis differs between the apps

```{r}
selectivv[[3]]  %>%
    filter(group == "Cities")  %>%
    mutate(period = as.character(period)) %>%
    select(category, period, region_name, apps, number_of_users) %>%
    left_join(
      bael %>%
        mutate(region_name = str_remove(region_name, "M. "))
    ) %>%
    filter(number_of_users > 0 ) -> cities_bael
```


```{r}
cities_bael %>%
  filter(region_name != "Sopot", period == "2020.1") %>%
  filter(!is.na(y))  %>%
  mutate(share = number_of_users/y*100,
         share_hi = number_of_users / (y - 1.96*rmse)*100,
         share_lo = number_of_users / (y + 1.96*rmse)*100) %>%
  mutate(apps = factor(apps, c("Uber", "Bolt Driver", "iTaxi", "FREE NOW",
                               "Takeaway", "Wolt", "Glover",  "Bolt Courier"))) %>%
  ggplot(data = ., aes(x = reorder(region_name, -y), y = share, ymin = share_lo, ymax = share_hi)) +
  geom_errorbar() +
  geom_point()  +
  facet_wrap(~apps, ncol = 4, scale = "free_y") +
  theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1, size = 5))  +
  #scale_y_continuous(labels = scales::label_percent(accuracy = 2)) +
  labs(x = "Cities (ordered by the size of the working population according to the LFS)", 
       y = "Number of users / LFS working population [%]") -> p3

p3

ggsave(plot = p3, file = "figures/fig-sel-cities-shares.png", width = 8, height = 4)

```

Figure 7 -- Average and standard deviation (Std. Dev.) of activity time by app type, app, weekdays and hours


```{r}
selectivv[[4]] %>%
  mutate(apps = factor(apps, c("Uber", "Bolt Driver", "iTaxi", "FREE NOW",
                               "Takeaway", "Wolt", "Glover",  "Bolt Courier")),
         day = factor(day, c("Mondays-Thursdays", "Fridays-Sundays")),
         hour = str_replace(hour, "day", "daytime"),
         hour = str_replace(hour, "night", "nightime"),
         category  = factor(category, c("Transportation", "Delivery")))  %>%
  ggplot(data = ., aes(x = as.character(period), y = activity_time, color = apps, group = apps)) +
  geom_line() +
  geom_point() + 
  facet_nested(day ~ category +  hour + statistic)  +
  scale_color_brewer(type = "qual", palette = "Dark2", name = "Apps") +  
  theme(axis.text.x=element_text(angle = 45, vjust = 1, hjust = 1),
        legend.position = "bottom") +
  labs(x = "Half-year", y = "Time spent in the app") + 
  scale_y_continuous(breaks = seq(0,7,1)) +
  guides(color = guide_legend(nrow = 2, byrow = TRUE))  -> p4

p4

ggsave(plot = p4, file = "figures/fig-sel-half-time-dev.png", width = 8, height = 5)

```

APPENDIX

Table 6 Number of active users in cities for 2020HY2

```{r}
selectivv[[3]] %>%
    filter(group == "Cities") %>%
    mutate(apps = factor(apps, c("Uber", "Bolt Driver", "iTaxi", "FREE NOW",
                                 "Takeaway", "Wolt", "Glover",  "Bolt Courier"))) %>%
    filter(number_of_users > 0, period == "2020.2")  %>% 
    select(period, apps, region_name, number_of_users) %>%
    spread(apps, number_of_users) %>% 
    select(-period) %>% 
    xtable(digits = 0) %>% 
    print.xtable(include.rownames = F, NA.string = "--")
```

Plots by City, Functional UAs, woi

Table with data

```{r}
spat_tab <-data_frame(city = list("Wrocław", 
                       c("Bydgoszcz", "Toruń"),
                       "Łódź",
                       "Lublin",
                       c("Zielona Góra", "Gorzów Wielkopolski"),
                       "Kraków",
                       "Warszawa",
                       "Opole",
                       "Rzeszów",
                       "Białystok",
                       c("Gdańsk", "Gdynia", "Sopot"),
                       "Katowice",
                       "Kielce",
                       "Olsztyn",
                       "Poznań",
                       "Szczecin"),
           lau  = list("Functional area - Wrocław", 
                       c("Functional area - Bydgoszcz", "Functional area - Toruń"),
                       "Functional area - Łódź",
                       "Functional area - Lublin",
                       c("Functional area - Zielona Góra", "Functional area - Gorzów Wielkopolski"),
                       "Functional area - Kraków",
                       "Functional area - Warszawa",
                       "Functional area - Opole",
                       "Functional area - Rzeszów",
                       "Functional area - Białystok",
                       "Functional area - Trójmiasto",
                       c("Functional area - GMZ", "Functional area - GMZ2"),
                       "Functional area - Kielce",
                       "Functional area - Olsztyn",
                       "Functional area - Poznań",
                       "Functional area - Szczecin"),
           woj = list("dolnośląskie", 
                      "kujawsko-pomorskie",
                      "łódzkie",
                      "lubelskie",
                      "lubuskie",
                      "małopolskie",
                      "mazowieckie",
                      "opolskie",
                      "podkarpackie",
                      "podlaskie",
                      "pomorskie",
                      "śląskie",
                      "świętokrzyskie",
                      "warmińsko-mazurskie",
                      "wielkopolskie",
                      "zachodniopomorskie"))
```

For plot: c(1, 3, 4, 6:10,13:16)
```{r}
plot_regions <- c(1, 3, 4, 6:10,13:16)
```

```{r}

for (i in plot_regions) {
  
city <- spat_tab[i, "city"][[1]][[1]]
lau <- spat_tab[i, "lau"][[1]][[1]]
woj <- spat_tab[i, "woj"][[1]][[1]]

selectivv[[3]] %>%
  filter((group == "Voivodeship" & region_name == woj) |
         (group == "Functional area" & region_name == lau) | 
         (group == "Cities" & region_name == city)) %>%
  mutate(region_name = str_replace(region_name, "Functional area - ", "FUA: "),
         group = factor(group, c("Cities", "Functional area", "Provinces"),
                        ordered = T),
         region_name = str_replace(region_name, "Warszawa", "Warsaw"),
         region_name = str_replace(region_name, "Kraków", "Crakow"))  %>%
  arrange(apps, period, group) %>%
  group_by(category, apps, period) %>%
  mutate(n = number_of_users - lag(number_of_users),
         n = ifelse(is.na(n), number_of_users, n),
         period = as.character(period),
         apps = factor(apps, c("Uber", "Bolt Driver", "iTaxi", "FREE NOW",
                               "Takeaway", "Wolt", "Glover",  "Bolt Courier"))) %>%
  ungroup() %>%
  mutate(region_name = factor(region_name, unique(region_name), ordered = T)) %>%
  ggplot(data = ., aes(x = period, y = n, group = apps, color = apps)) +
  geom_line() +
  facet_nested(category ~ region_name, scales = "free_y") + 
  scale_color_brewer(type = "qual", palette = "Dark2") +
  labs(x = "Period", y = "Change in the number of users", color = "Apps") +
  theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1),
        legend.position = "bottom")  +
  guides(color = guide_legend(nrow = 2, byrow = TRUE))  -> p1_annex

ggsave(plot = p1_annex, file = paste0("figures/fig-annex-", i, ".png"), width = 8, height = 5)

}
```


Table 7 Direct estimates, its standard errors (in thousands) and sample sizes of the working population size (18--64) based on the Labour Force Survey between 2018HY1 and 2020HY

```{r}
bael %>%
  filter(period == "2018.1")  %>% 
  mutate(region_name = str_remove(region_name, "M. "),
         y = y / 1000,
         rmse = rmse / 1000,
         cv = rmse/y*100) %>%
  select(region_name, size = y, std = rmse, sample = n) %>%
  left_join(
    bael %>%
    filter(period == "2018.2")  %>% 
    mutate(region_name = str_remove(region_name, "M. "),
         y = y / 1000,
         rmse = rmse / 1000,
         cv = rmse/y*100) %>%
    select(region_name, size = y, std = rmse, sample = n),
    by = "region_name"
  ) %>%
  left_join(
    bael %>%
    filter(period == "2019.1")  %>% 
    mutate(region_name = str_remove(region_name, "M. "),
         y = y / 1000,
         rmse = rmse / 1000,
         cv = rmse/y*100) %>%
    select(region_name, size = y, std = rmse, sample = n),
    by = "region_name"
  )  %>%
  left_join(
    bael %>%
    filter(period == "2019.2")  %>% 
    mutate(region_name = str_remove(region_name, "M. "),
         y = y / 1000,
         rmse = rmse / 1000,
         cv = rmse/y*100) %>%
    select(region_name, size = y, std = rmse, sample = n),
    by = "region_name"
  )  %>%
  left_join(
    bael %>%
    filter(period == "2020.1")  %>% 
    mutate(region_name = str_remove(region_name, "M. "),
         y = y / 1000,
         rmse = rmse / 1000,
         cv = rmse/y*100) %>%
    select(region_name, size = y, std = rmse, sample = n),
    by = "region_name"
  )  %>%
  mutate_at(vars(starts_with("sample")), as.integer) %>%
  xtable(digits = 1) %>%
  print.xtable(include.rownames = F)
  
```